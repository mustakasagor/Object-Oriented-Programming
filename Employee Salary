#include <iostream>
using namespace std;

class Employee {
protected:
    double baseSalary;
public:
    Employee(double base) : baseSalary(base) {}
    virtual double calculateSalary() = 0;
    virtual void display() {
        cout << "Base Salary: " << baseSalary << endl;
    }
};

class Manager : public Employee {
    double bonus;
public:
    Manager(double base, double bonusAmount) : Employee(base), bonus(bonusAmount) {}
    double calculateSalary() override {
        return baseSalary + bonus;
    }
    void display() override {
        cout << "Manager Salary: " << calculateSalary() << endl;
    }
};

class Engineer : public Employee {
    double overtime;
public:
    Engineer(double base, double overtimePay) : Employee(base), overtime(overtimePay) {}
    double calculateSalary() override {
        return baseSalary + overtime;
    }
    void display() override {
        cout << "Engineer Salary: " << calculateSalary() << endl;
    }
};

int main() {
    Employee* e1 = new Manager(50000, 10000);
    Employee* e2 = new Engineer(40000, 5000);

    e1->display();
    e2->display();

    delete e1;
    delete e2;

    return 0;
}
